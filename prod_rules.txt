0: IotaProg' -> IotaProg
1: IotaProg -> Rules
2: IotaProg -> Rule
3: Rules -> rules string_literal ZeroOrMoreDecls OneOrMoreRules end
4: OneOrMoreRules -> Rule
5: OneOrMoreRules -> Rules
6: OneOrMoreRules -> Rule OneOrMoreRules
7: OneOrMoreRules -> Rules OneOrMoreRules
8: Rule -> rule string_literal ZeroOrMoreDecls EventHandler ; OneOrMorePredicateActions end
9: ZeroOrMoreDecls -> 
10: ZeroOrMoreDecls -> Decl ZeroOrMoreDecls
11: Decl -> device identifier : identifier ;
12: Decl -> input identifier : identifier ;
13: Decl -> output identifier : identifier ;
14: Decl -> output identifier : ( OneOrMoreIdentifiers ) ;
15: OneOrMoreIdentifiers -> identifier
16: OneOrMoreIdentifiers -> identifier , OneOrMoreIdentifiers
17: EventHandler -> FieldOrTimer [ . ~> ]
18: EventHandler -> FieldOrTimer [ . ~> Constant ]
19: EventHandler -> FieldOrTimer [ Constant ~> ]
20: EventHandler -> FieldOrTimer [ Constant ~> Constant ]
21: EventHandler -> any Group ( identifier -> EventHandler )
22: OneOrMorePredicateActions -> Predicate ; Actions
23: OneOrMorePredicateActions -> Predicate ; Actions | OneOrMorePredicateActions
24: Predicate -> OrPred
25: Predicate -> all Group ( identifier -> Predicate )
26: Predicate -> exists Group ( identifier -> Predicate )
27: OrPred -> OrPred || AndPred
28: OrPred -> AndPred
29: AndPred -> AndPred && EqNeqPred
30: AndPred -> EqNeqPred
31: EqNeqPred -> EqNeqPred == CompExpr
32: EqNeqPred -> EqNeqPred != CompExpr
33: EqNeqPred -> CompExpr
34: CompExpr -> CompExpr < AdditiveExpr
35: CompExpr -> CompExpr <= AdditiveExpr
36: CompExpr -> CompExpr > AdditiveExpr
37: CompExpr -> CompExpr >= AdditiveExpr
38: CompExpr -> AdditiveExpr
39: AdditiveExpr -> AdditiveExpr + MultiplicativeExpr
40: AdditiveExpr -> AdditiveExpr - MultiplicativeExpr
41: AdditiveExpr -> MultiplicativeExpr
42: MultiplicativeExpr -> MultiplicativeExpr * UnaryExpr
43: MultiplicativeExpr -> MultiplicativeExpr / UnaryExpr
44: MultiplicativeExpr -> UnaryExpr
45: UnaryExpr -> - PrimaryExpr
46: UnaryExpr -> ~ PrimaryExpr
47: UnaryExpr -> PrimaryExpr
48: PrimaryExpr -> true
49: PrimaryExpr -> false
50: PrimaryExpr -> number_literal
51: PrimaryExpr -> string_literal
52: PrimaryExpr -> identifier
53: PrimaryExpr -> identifier . identifier
54: PrimaryExpr -> ( Predicate )
55: Constant -> identifier
56: Constant -> number_literal
57: Actions -> 
58: Actions -> OneOrMoreActions
59: OneOrMoreActions -> Action
60: OneOrMoreActions -> Action , OneOrMoreActions
61: Action -> FieldOrTimer := AdditiveExpr
62: Action -> identifier ( OneOrMoreAdditiveExprs )
63: Action -> start identifier at AdditiveExpr
64: Action -> stop identifier
65: Action -> map Group ( identifier -> Action )
66: OneOrMoreAdditiveExprs -> AdditiveExpr
67: OneOrMoreAdditiveExprs -> AdditiveExpr , OneOrMoreAdditiveExprs
68: FieldOrTimer -> identifier
69: FieldOrTimer -> identifier . identifier
70: Group -> identifier
71: Group -> { zero_or_more_device_identifiers }
72: zero_or_more_device_identifiers -> 
73: zero_or_more_device_identifiers -> one_or_more_device_identifiers
74: one_or_more_device_identifiers -> identifier
75: one_or_more_device_identifiers -> identifier , one_or_more_device_identifiers
