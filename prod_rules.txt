0: IotaProg' -> IotaProg
1: IotaProg -> Rules
2: IotaProg -> Rule
3: Rules -> rules string_literal ZeroOrMoreDecls OneOrMoreRules end
4: OneOrMoreRules -> Rule
5: OneOrMoreRules -> Rules
6: OneOrMoreRules -> Rule OneOrMoreRules
7: OneOrMoreRules -> Rules OneOrMoreRules
8: Rule -> rule string_literal ZeroOrMoreDecls EventHandler ; OneOrMorePredicateActions end
9: ZeroOrMoreDecls -> 
10: ZeroOrMoreDecls -> Decl ZeroOrMoreDecls
11: Decl -> device identifier : identifier ;
12: Decl -> device identifier : identifier . identifier ;
13: Decl -> input identifier : identifier ;
14: Decl -> output identifier : identifier ;
15: Decl -> output identifier : ( OneOrMoreIdentifiers ) ;
16: OneOrMoreIdentifiers -> identifier
17: OneOrMoreIdentifiers -> identifier , OneOrMoreIdentifiers
18: EventHandler -> FieldOrTimer [ . ~> ]
19: EventHandler -> FieldOrTimer [ . ~> Constant ]
20: EventHandler -> FieldOrTimer [ Constant ~> ]
21: EventHandler -> FieldOrTimer [ Constant ~> Constant ]
22: EventHandler -> any Group ( identifier -> EventHandler )
23: OneOrMorePredicateActions -> Predicate ; Actions
24: OneOrMorePredicateActions -> Predicate ; Actions | OneOrMorePredicateActions
25: Predicate -> OrPred
26: Predicate -> all Group ( identifier -> Predicate )
27: Predicate -> exists Group ( identifier -> Predicate )
28: OrPred -> OrPred || AndPred
29: OrPred -> AndPred
30: AndPred -> AndPred && EqNeqPred
31: AndPred -> EqNeqPred
32: EqNeqPred -> EqNeqPred == CompExpr
33: EqNeqPred -> EqNeqPred != CompExpr
34: EqNeqPred -> CompExpr
35: CompExpr -> CompExpr < AdditiveExpr
36: CompExpr -> CompExpr <= AdditiveExpr
37: CompExpr -> CompExpr > AdditiveExpr
38: CompExpr -> CompExpr >= AdditiveExpr
39: CompExpr -> AdditiveExpr
40: AdditiveExpr -> AdditiveExpr + MultiplicativeExpr
41: AdditiveExpr -> AdditiveExpr - MultiplicativeExpr
42: AdditiveExpr -> MultiplicativeExpr
43: MultiplicativeExpr -> MultiplicativeExpr * UnaryExpr
44: MultiplicativeExpr -> MultiplicativeExpr / UnaryExpr
45: MultiplicativeExpr -> UnaryExpr
46: UnaryExpr -> - PrimaryExpr
47: UnaryExpr -> ~ PrimaryExpr
48: UnaryExpr -> PrimaryExpr
49: PrimaryExpr -> true
50: PrimaryExpr -> false
51: PrimaryExpr -> number_literal
52: PrimaryExpr -> string_literal
53: PrimaryExpr -> identifier
54: PrimaryExpr -> identifier . identifier
55: PrimaryExpr -> ( Predicate )
56: Constant -> identifier
57: Constant -> number_literal
58: Actions -> 
59: Actions -> OneOrMoreActions
60: OneOrMoreActions -> Action
61: OneOrMoreActions -> Action , OneOrMoreActions
62: Action -> FieldOrTimer := AdditiveExpr
63: Action -> identifier ( OneOrMoreAdditiveExprs )
64: Action -> start identifier at AdditiveExpr
65: Action -> stop identifier
66: Action -> map Group ( identifier -> Action )
67: OneOrMoreAdditiveExprs -> AdditiveExpr
68: OneOrMoreAdditiveExprs -> AdditiveExpr , OneOrMoreAdditiveExprs
69: FieldOrTimer -> identifier
70: FieldOrTimer -> identifier . identifier
71: Group -> identifier
72: Group -> { zero_or_more_device_identifiers }
73: zero_or_more_device_identifiers -> 
74: zero_or_more_device_identifiers -> one_or_more_device_identifiers
75: one_or_more_device_identifiers -> identifier
76: one_or_more_device_identifiers -> identifier , one_or_more_device_identifiers
